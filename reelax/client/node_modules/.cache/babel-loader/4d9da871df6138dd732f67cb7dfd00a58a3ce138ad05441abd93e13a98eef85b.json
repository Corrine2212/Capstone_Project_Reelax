{"ast":null,"code":"/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType } from './body.js';\nimport { isRedirect } from './utils/is-redirect.js';\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n  constructor() {\n    let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(body, options);\n\n    // eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n    const status = options.status != null ? options.status : 200;\n    const headers = new Headers(options.headers);\n    if (body !== null && !headers.has('Content-Type')) {\n      const contentType = extractContentType(body, this);\n      if (contentType) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n    this[INTERNALS] = {\n      type: 'default',\n      url: options.url,\n      status,\n      statusText: options.statusText || '',\n      headers,\n      counter: options.counter,\n      highWaterMark: options.highWaterMark\n    };\n  }\n  get type() {\n    return this[INTERNALS].type;\n  }\n  get url() {\n    return this[INTERNALS].url || '';\n  }\n  get status() {\n    return this[INTERNALS].status;\n  }\n\n  /**\n   * Convenience property representing if the request ended normally\n   */\n  get ok() {\n    return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n  }\n  get redirected() {\n    return this[INTERNALS].counter > 0;\n  }\n  get statusText() {\n    return this[INTERNALS].statusText;\n  }\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n  get highWaterMark() {\n    return this[INTERNALS].highWaterMark;\n  }\n\n  /**\n   * Clone this response\n   *\n   * @return  Response\n   */\n  clone() {\n    return new Response(clone(this, this.highWaterMark), {\n      type: this.type,\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok,\n      redirected: this.redirected,\n      size: this.size,\n      highWaterMark: this.highWaterMark\n    });\n  }\n\n  /**\n   * @param {string} url    The URL that the new response is to originate from.\n   * @param {number} status An optional status code for the response (e.g., 302.)\n   * @returns {Response}    A Response object.\n   */\n  static redirect(url) {\n    let status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 302;\n    if (!isRedirect(status)) {\n      throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n    }\n    return new Response(null, {\n      headers: {\n        location: new URL(url).toString()\n      },\n      status\n    });\n  }\n  static error() {\n    const response = new Response(null, {\n      status: 0,\n      statusText: ''\n    });\n    response[INTERNALS].type = 'error';\n    return response;\n  }\n  static json() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const body = JSON.stringify(data);\n    if (body === undefined) {\n      throw new TypeError('data is not JSON serializable');\n    }\n    const headers = new Headers(init && init.headers);\n    if (!headers.has('content-type')) {\n      headers.set('content-type', 'application/json');\n    }\n    return new Response(body, {\n      ...init,\n      headers\n    });\n  }\n  get [Symbol.toStringTag]() {\n    return 'Response';\n  }\n}\nObject.defineProperties(Response.prototype, {\n  type: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  redirected: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});","map":{"version":3,"names":["Headers","Body","clone","extractContentType","isRedirect","INTERNALS","Symbol","Response","constructor","body","arguments","length","undefined","options","status","headers","has","contentType","append","type","url","statusText","counter","highWaterMark","ok","redirected","size","redirect","RangeError","location","URL","toString","error","response","json","data","init","JSON","stringify","TypeError","set","toStringTag","Object","defineProperties","prototype","enumerable"],"sources":["/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/node_modules/node-fetch/src/response.js"],"sourcesContent":["/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}