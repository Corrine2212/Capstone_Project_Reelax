{"ast":null,"code":"import { FetchBaseError } from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n  /**\n   * @param  {string} message -      Error message for human\n   * @param  {string} [type] -        Error type for machine\n   * @param  {SystemError} [systemError] - For Node.js system error\n   */\n  constructor(message, type, systemError) {\n    super(message, type);\n    // When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n    if (systemError) {\n      // eslint-disable-next-line no-multi-assign\n      this.code = this.errno = systemError.code;\n      this.erroredSysCall = systemError.syscall;\n    }\n  }\n}","map":{"version":3,"names":["FetchBaseError","FetchError","constructor","message","type","systemError","code","errno","erroredSysCall","syscall"],"sources":["/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/node_modules/node-fetch/src/errors/fetch-error.js"],"sourcesContent":["\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n"],"mappings":"AACA,SAAQA,cAAc,QAAO,WAAW;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,SAASD,cAAc,CAAC;EAC9C;AACD;AACA;AACA;AACA;EACCE,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAEC,WAAW,EAAE;IACvC,KAAK,CAACF,OAAO,EAAEC,IAAI,CAAC;IACpB;IACA,IAAIC,WAAW,EAAE;MAChB;MACA,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,KAAK,GAAGF,WAAW,CAACC,IAAI;MACzC,IAAI,CAACE,cAAc,GAAGH,WAAW,CAACI,OAAO;IAC1C;EACD;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}