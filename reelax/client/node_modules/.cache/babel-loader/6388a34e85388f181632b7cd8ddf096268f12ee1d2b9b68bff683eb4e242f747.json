{"ast":null,"code":"var _jsxFileName = \"/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/client/src/containers/MainContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovies();\n  }, []);\n  const getMovies = function () {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTJmOTk5MTUyNzFhZmI3NGQxZmJmZjQxMDI2ZWI0YyIsInN1YiI6IjY0OTVhMDU1ODgwNTUxMDBlNzQ0N2FjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lFaWCPsXKZFT5aaHoRbNYKgyNEhOsVtu1AHUUZGVZ1g'\n      }\n    };\n    const allRequests = [];\n    for (let i = 1; i <= 20; i++) {\n      const newFetch = fetch(\"http://api.themoviedb.org/3/discover/movie?api_key=7f46651666f1ca68e4cf0cb150551f07&page=\" + i, options).then(response => response.json());\n      allRequests.push(newFetch);\n    }\n    Promise.all(allRequests).then(data => saveToDb(data));\n  };\n  const saveToDb = data => {\n    for (let result of data) {\n      for (let movie of result) {\n        let newMovie = {\n          \"title\": movie.title,\n          \"poster\": movie.poster_path,\n          \"genre\": movie.genre,\n          \"release\": movie.release,\n          \"seen\": movie.seen,\n          \"reviews\": movie.reviews\n        };\n        request.post(\"/yourdb\", newMovie);\n      }\n    }\n  };\n  const movieDisplay = movies.map((movie, index) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: movie.budget\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MainContainer, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MainContainer;\nexport default MainContainer;\nvar _c;\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainContainer","_s","movies","setMovies","getMovies","options","method","headers","accept","Authorization","allRequests","i","newFetch","fetch","then","response","json","push","Promise","all","data","saveToDb","result","movie","newMovie","title","poster_path","genre","release","seen","reviews","request","post","movieDisplay","map","index","children","budget","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/client/src/containers/MainContainer.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst MainContainer = () => {\n\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n      getMovies();\n    }, [])\n    \n    \n    const getMovies = function () {\n    \n\n        const options = {\n            method: 'GET',\n            headers: {\n              accept: 'application/json',\n              Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTJmOTk5MTUyNzFhZmI3NGQxZmJmZjQxMDI2ZWI0YyIsInN1YiI6IjY0OTVhMDU1ODgwNTUxMDBlNzQ0N2FjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lFaWCPsXKZFT5aaHoRbNYKgyNEhOsVtu1AHUUZGVZ1g'\n            }\n          };\n          const allRequests = []\n          for (let i = 1; i <= 20; i++){\n            const newFetch = fetch(\"http://api.themoviedb.org/3/discover/movie?api_key=7f46651666f1ca68e4cf0cb150551f07&page=\" + i, options)\n            .then(response => response.json())\n            allRequests.push(newFetch)\n          }\n            Promise.all(allRequests)\n            .then((data) => saveToDb(data))\n    \n    }\n\n    const saveToDb =(data) =>{\n      for(let result of data){\n        for(let movie of result){\n          let newMovie = {\n            \"title\": movie.title,\n            \"poster\": movie.poster_path,\n            \"genre\": movie.genre,\n            \"release\": movie.release,\n            \"seen\": movie.seen,\n            \"reviews\": movie.reviews\n          }\n          request.post(\"/yourdb\", newMovie)\n        }\n      }\n\n    }\n\n    const movieDisplay = movies.map((movie, index) => {\n        return <li key={index}>{movie.budget}</li>\n    })\n    \n    \n    return ( \n        <div>\n            <ul>\n                {movieDisplay}\n            </ul>\n        </div>\n     );\n}\n \nexport default MainContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdO,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMA,SAAS,GAAG,SAAAA,CAAA,EAAY;IAG1B,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACjB;IACF,CAAC;IACD,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAC;MAC3B,MAAMC,QAAQ,GAAGC,KAAK,CAAC,2FAA2F,GAAGF,CAAC,EAAEN,OAAO,CAAC,CAC/HS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAClCN,WAAW,CAACO,IAAI,CAACL,QAAQ,CAAC;IAC5B;IACEM,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC,CACvBI,IAAI,CAAEM,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC;EAEvC,CAAC;EAED,MAAMC,QAAQ,GAAGD,IAAI,IAAI;IACvB,KAAI,IAAIE,MAAM,IAAIF,IAAI,EAAC;MACrB,KAAI,IAAIG,KAAK,IAAID,MAAM,EAAC;QACtB,IAAIE,QAAQ,GAAG;UACb,OAAO,EAAED,KAAK,CAACE,KAAK;UACpB,QAAQ,EAAEF,KAAK,CAACG,WAAW;UAC3B,OAAO,EAAEH,KAAK,CAACI,KAAK;UACpB,SAAS,EAAEJ,KAAK,CAACK,OAAO;UACxB,MAAM,EAAEL,KAAK,CAACM,IAAI;UAClB,SAAS,EAAEN,KAAK,CAACO;QACnB,CAAC;QACDC,OAAO,CAACC,IAAI,CAAC,SAAS,EAAER,QAAQ,CAAC;MACnC;IACF;EAEF,CAAC;EAED,MAAMS,YAAY,GAAG/B,MAAM,CAACgC,GAAG,CAAC,CAACX,KAAK,EAAEY,KAAK,KAAK;IAC9C,oBAAOpC,OAAA;MAAAqC,QAAA,EAAiBb,KAAK,CAACc;IAAM,GAApBF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAC9C,CAAC,CAAC;EAGF,oBACI1C,OAAA;IAAAqC,QAAA,eACIrC,OAAA;MAAAqC,QAAA,EACKH;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAxC,EAAA,CA3DKD,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AA6DnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}