{"ast":null,"code":"/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport { format as formatUrl } from 'node:url';\nimport { deprecate } from 'node:util';\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType, getTotalBytes } from './body.js';\nimport { isAbortSignal } from './utils/is.js';\nimport { getSearch } from './utils/get-search.js';\nimport { validateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY } from './utils/referrer.js';\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n  return typeof object === 'object' && typeof object[INTERNALS] === 'object';\n};\nconst doBadDataWarn = deprecate(() => {}, '.data is not a valid RequestInit property, use .body instead', 'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n  constructor(input) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let parsedURL;\n\n    // Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n    if (isRequest(input)) {\n      parsedURL = new URL(input.url);\n    } else {\n      parsedURL = new URL(input);\n      input = {};\n    }\n    if (parsedURL.username !== '' || parsedURL.password !== '') {\n      throw new TypeError(`${parsedURL} is an url with embedded credentials.`);\n    }\n    let method = init.method || input.method || 'GET';\n    if (/^(delete|get|head|options|post|put)$/i.test(method)) {\n      method = method.toUpperCase();\n    }\n    if (!isRequest(init) && 'data' in init) {\n      doBadDataWarn();\n    }\n\n    // eslint-disable-next-line no-eq-null, eqeqeq\n    if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n      throw new TypeError('Request with GET/HEAD method cannot have body');\n    }\n    const inputBody = init.body ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    super(inputBody, {\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n    if (inputBody !== null && !headers.has('Content-Type')) {\n      const contentType = extractContentType(inputBody, this);\n      if (contentType) {\n        headers.set('Content-Type', contentType);\n      }\n    }\n    let signal = isRequest(input) ? input.signal : null;\n    if ('signal' in init) {\n      signal = init.signal;\n    }\n\n    // eslint-disable-next-line no-eq-null, eqeqeq\n    if (signal != null && !isAbortSignal(signal)) {\n      throw new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n    }\n\n    // §5.4, Request constructor steps, step 15.1\n    // eslint-disable-next-line no-eq-null, eqeqeq\n    let referrer = init.referrer == null ? input.referrer : init.referrer;\n    if (referrer === '') {\n      // §5.4, Request constructor steps, step 15.2\n      referrer = 'no-referrer';\n    } else if (referrer) {\n      // §5.4, Request constructor steps, step 15.3.1, 15.3.2\n      const parsedReferrer = new URL(referrer);\n      // §5.4, Request constructor steps, step 15.3.3, 15.3.4\n      referrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n    } else {\n      referrer = undefined;\n    }\n    this[INTERNALS] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL,\n      signal,\n      referrer\n    };\n\n    // Node-fetch-only options\n    this.follow = init.follow === undefined ? input.follow === undefined ? 20 : input.follow : init.follow;\n    this.compress = init.compress === undefined ? input.compress === undefined ? true : input.compress : init.compress;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n    this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n    this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n    // §5.4, Request constructor steps, step 16.\n    // Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n    this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n  }\n\n  /** @returns {string} */\n  get method() {\n    return this[INTERNALS].method;\n  }\n\n  /** @returns {string} */\n  get url() {\n    return formatUrl(this[INTERNALS].parsedURL);\n  }\n\n  /** @returns {Headers} */\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n  get redirect() {\n    return this[INTERNALS].redirect;\n  }\n\n  /** @returns {AbortSignal} */\n  get signal() {\n    return this[INTERNALS].signal;\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-request-referrer\n  get referrer() {\n    if (this[INTERNALS].referrer === 'no-referrer') {\n      return '';\n    }\n    if (this[INTERNALS].referrer === 'client') {\n      return 'about:client';\n    }\n    if (this[INTERNALS].referrer) {\n      return this[INTERNALS].referrer.toString();\n    }\n    return undefined;\n  }\n  get referrerPolicy() {\n    return this[INTERNALS].referrerPolicy;\n  }\n  set referrerPolicy(referrerPolicy) {\n    this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n  }\n\n  /**\n   * Clone this request\n   *\n   * @return  Request\n   */\n  clone() {\n    return new Request(this);\n  }\n  get [Symbol.toStringTag]() {\n    return 'Request';\n  }\n}\nObject.defineProperties(Request.prototype, {\n  method: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  redirect: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  },\n  signal: {\n    enumerable: true\n  },\n  referrer: {\n    enumerable: true\n  },\n  referrerPolicy: {\n    enumerable: true\n  }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n  const {\n    parsedURL\n  } = request[INTERNALS];\n  const headers = new Headers(request[INTERNALS].headers);\n\n  // Fetch step 1.3\n  if (!headers.has('Accept')) {\n    headers.set('Accept', '*/*');\n  }\n\n  // HTTP-network-or-cache fetch steps 2.4-2.7\n  let contentLengthValue = null;\n  if (request.body === null && /^(post|put)$/i.test(request.method)) {\n    contentLengthValue = '0';\n  }\n  if (request.body !== null) {\n    const totalBytes = getTotalBytes(request);\n    // Set Content-Length if totalBytes is a number (that is not NaN)\n    if (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n      contentLengthValue = String(totalBytes);\n    }\n  }\n  if (contentLengthValue) {\n    headers.set('Content-Length', contentLengthValue);\n  }\n\n  // 4.1. Main fetch, step 2.6\n  // > If request's referrer policy is the empty string, then set request's referrer policy to the\n  // > default referrer policy.\n  if (request.referrerPolicy === '') {\n    request.referrerPolicy = DEFAULT_REFERRER_POLICY;\n  }\n\n  // 4.1. Main fetch, step 2.7\n  // > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n  // > determine request's referrer.\n  if (request.referrer && request.referrer !== 'no-referrer') {\n    request[INTERNALS].referrer = determineRequestsReferrer(request);\n  } else {\n    request[INTERNALS].referrer = 'no-referrer';\n  }\n\n  // 4.5. HTTP-network-or-cache fetch, step 6.9\n  // > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n  // >  and isomorphic encoded, to httpRequest's header list.\n  if (request[INTERNALS].referrer instanceof URL) {\n    headers.set('Referer', request.referrer);\n  }\n\n  // HTTP-network-or-cache fetch step 2.11\n  if (!headers.has('User-Agent')) {\n    headers.set('User-Agent', 'node-fetch');\n  }\n\n  // HTTP-network-or-cache fetch step 2.15\n  if (request.compress && !headers.has('Accept-Encoding')) {\n    headers.set('Accept-Encoding', 'gzip, deflate, br');\n  }\n  let {\n    agent\n  } = request;\n  if (typeof agent === 'function') {\n    agent = agent(parsedURL);\n  }\n  if (!headers.has('Connection') && !agent) {\n    headers.set('Connection', 'close');\n  }\n\n  // HTTP-network fetch step 4.2\n  // chunked encoding is handled by Node.js\n\n  const search = getSearch(parsedURL);\n\n  // Pass the full URL directly to request(), but overwrite the following\n  // options:\n  const options = {\n    // Overwrite search to retain trailing ? (issue #776)\n    path: parsedURL.pathname + search,\n    // The following options are not expressed in the URL\n    method: request.method,\n    headers: headers[Symbol.for('nodejs.util.inspect.custom')](),\n    insecureHTTPParser: request.insecureHTTPParser,\n    agent\n  };\n  return {\n    /** @type {URL} */\n    parsedURL,\n    options\n  };\n};","map":{"version":3,"names":["format","formatUrl","deprecate","Headers","Body","clone","extractContentType","getTotalBytes","isAbortSignal","getSearch","validateReferrerPolicy","determineRequestsReferrer","DEFAULT_REFERRER_POLICY","INTERNALS","Symbol","isRequest","object","doBadDataWarn","Request","constructor","input","init","arguments","length","undefined","parsedURL","URL","url","username","password","TypeError","method","test","toUpperCase","body","inputBody","size","headers","has","contentType","set","signal","referrer","parsedReferrer","redirect","follow","compress","counter","agent","highWaterMark","insecureHTTPParser","referrerPolicy","toString","toStringTag","Object","defineProperties","prototype","enumerable","getNodeRequestOptions","request","contentLengthValue","totalBytes","Number","isNaN","String","search","options","path","pathname","for"],"sources":["/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/node_modules/node-fetch/src/request.js"],"sourcesContent":["/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}