{"ast":null,"code":"import Blob from './index.js';\nconst _File = class File extends Blob {\n  #lastModified = 0;\n  #name = '';\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */ // @ts-ignore\n  constructor(fileBits, fileName) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);\n    }\n    super(fileBits, options);\n    if (options === null) options = {};\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified;\n    }\n    this.#name = String(fileName);\n  }\n  get name() {\n    return this.#name;\n  }\n  get lastModified() {\n    return this.#lastModified;\n  }\n  get [Symbol.toStringTag]() {\n    return 'File';\n  }\n  static [Symbol.hasInstance](object) {\n    return !!object && object instanceof Blob && /^(File)$/.test(object[Symbol.toStringTag]);\n  }\n};\n\n/** @type {typeof globalThis.File} */ // @ts-ignore\nexport const File = _File;\nexport default File;","map":{"version":3,"names":["Blob","_File","File","lastModified","name","constructor","fileBits","fileName","options","arguments","length","undefined","TypeError","Date","now","Number","isNaN","String","Symbol","toStringTag","hasInstance","object","test"],"sources":["/Users/ewang/Desktop/G36/codeclan_work/week_15/Capstone_Project_Reelax/reelax/node_modules/fetch-blob/file.js"],"sourcesContent":["import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAE7B,MAAMC,KAAK,GAAG,MAAMC,IAAI,SAASF,IAAI,CAAC;EACpC,CAACG,YAAY,GAAG,CAAC;EACjB,CAACC,IAAI,GAAG,EAAE;;EAEV;AACF;AACA;AACA;AACA,KAJE,CAIG;EACHC,WAAWA,CAAEC,QAAQ,EAAEC,QAAQ,EAAgB;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC3C,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACxB,MAAM,IAAIE,SAAS,CAAE,8DAA6DH,SAAS,CAACC,MAAO,WAAU,CAAC;IAChH;IACA,KAAK,CAACJ,QAAQ,EAAEE,OAAO,CAAC;IAExB,IAAIA,OAAO,KAAK,IAAI,EAAEA,OAAO,GAAG,CAAC,CAAC;;IAElC;IACA,MAAML,YAAY,GAAGK,OAAO,CAACL,YAAY,KAAKQ,SAAS,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,MAAM,CAACP,OAAO,CAACL,YAAY,CAAC;IACnG,IAAI,CAACY,MAAM,CAACC,KAAK,CAACb,YAAY,CAAC,EAAE;MAC/B,IAAI,CAAC,CAACA,YAAY,GAAGA,YAAY;IACnC;IAEA,IAAI,CAAC,CAACC,IAAI,GAAGa,MAAM,CAACV,QAAQ,CAAC;EAC/B;EAEA,IAAIH,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAAC,CAACA,IAAI;EACnB;EAEA,IAAID,YAAYA,CAAA,EAAI;IAClB,OAAO,IAAI,CAAC,CAACA,YAAY;EAC3B;EAEA,KAAKe,MAAM,CAACC,WAAW,IAAK;IAC1B,OAAO,MAAM;EACf;EAEA,QAAQD,MAAM,CAACE,WAAW,EAAGC,MAAM,EAAE;IACnC,OAAO,CAAC,CAACA,MAAM,IAAIA,MAAM,YAAYrB,IAAI,IACvC,UAAU,CAACsB,IAAI,CAACD,MAAM,CAACH,MAAM,CAACC,WAAW,CAAC,CAAC;EAC/C;AACF,CAAC;;AAED,sCAAqC;AACrC,OAAO,MAAMjB,IAAI,GAAGD,KAAK;AACzB,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}