[{"/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/index.js":"1","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/App.js":"2","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/reportWebVitals.js":"3","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/containers/MainContainer.js":"4","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/helpers/request.js":"5"},{"size":535,"mtime":1687795417563,"results":"6","hashOfConfig":"7"},{"size":224,"mtime":1687795417562,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1687795417563,"results":"9","hashOfConfig":"7"},{"size":3248,"mtime":1687872604586,"results":"10","hashOfConfig":"7"},{"size":656,"mtime":1687795417562,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"16irv1k",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/index.js",[],[],[],"/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/App.js",["30"],[],"import logo from './logo.svg';\nimport './App.css';\nimport MainContainer from './containers/MainContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/reportWebVitals.js",[],[],"/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/containers/MainContainer.js",["31","32"],[],"import React, {useState, useEffect} from 'react'\nimport Request from '../helpers/request'\n\nconst MainContainer = () => {\n\n    const baseURL = \"/api/users\"\n    const [movies, setMovies] = useState([])\n    const [users, setUsers] = useState([])\n    const [reviews, setReviews] = useState([])\n\n\n    useEffect(() => {\n      getMovies();\n      getUsers();\n      getReviews();\n     \n    }, [])\n    \n\n    const getUsers = () => {\n      return fetch(baseURL)\n          .then(res => res.json())\n          .then(data => setUsers(data))\n\n\n  }\n\n  const getMovies= () => {\n    const request= new Request()\n    request.get(\"/api/movies\")\n    .then((data) => {\n      setMovies(data)\n    })\n  }\n\n\n  const getReviews= () => {\n    const request= new Request()\n    request.get(\"/api/reviews\")\n    .then((data) => {\n      setReviews(data)\n    })\n  }\n\n\n  // const addUser = (user) => {\n  //   setUsers([...users, user])\n\n  // }\n    \n    // const getMovies = function () {\n    \n\n    //     // const options = {\n    //     //     method: 'GET',\n    //     //     headers: {\n    //     //       accept: 'application/json',\n    //     //       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTJmOTk5MTUyNzFhZmI3NGQxZmJmZjQxMDI2ZWI0YyIsInN1YiI6IjY0OTVhMDU1ODgwNTUxMDBlNzQ0N2FjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lFaWCPsXKZFT5aaHoRbNYKgyNEhOsVtu1AHUUZGVZ1g'\n    //     //     }\n    //     //   };\n    //       const allRequests = []\n    //       for (let i = 1; i <= 1000; i++){\n    //         const newFetch = fetch(\"http://api.themoviedb.org/3/discover/movie?api_key=7f46651666f1ca68e4cf0cb150551f07&page=\" + i)\n    //         .then(response => response.json())\n    //         allRequests.push(newFetch)\n    //       }\n    //         Promise.all(allRequests)\n    //         .then((data) => saveToDb(data))\n    \n    // }\n\n    // const saveToDb =(data) =>{\n    //   for(let result of data){\n\n    //     for(let movie of result.results){\n    //       let newMovie = {\n    //         \"title\": movie.title,\n    //         \"overview\": movie.overview,\n    //         \"poster\": movie.poster_path,\n    //         \"genre\": 1,\n    //         \"release\": movie.release_date,\n    //         \"seen\": false,\n    //         \"reviews\": [],\n    //         \"user\": {\"id\":2, \"username\":\"UserTwo\",\"email\":\"4321@gmail.com\",\"password\":\"4321\"}\n    //       }\n          \n    //       console.log(newMovie);\n    //       let request = new Request()\n    //     request.post(\"/api/movies\", newMovie)\n    //     }\n    //   }\n\n    // }\n\n    const movieDisplay = movies.map((movie, index) => {\n        return <li key={index}>{movie.title} <img id=\"poster\" src={\"https://image.tmdb.org/t/p/original\"+movie.poster} alt=\"poster\"/> {movie.overview}</li>\n    })\n\n    const userDisplay = users.map((user, index) => {\n      return <li key={index}>{user.username} {reviews.reviews}</li>\n    })\n\n    const reviewDisplay = reviews.map((review, index) => {\n    return <li key={index}>{review.review} </li>\n    })\n    \n    \n    return ( \n        <div>\n            <ul>\n\n              <p>this is a movie container</p>\n                {movieDisplay} \n                {/* {userDisplay}\n                {reviewDisplay} */}\n            </ul>\n        </div>\n     );\n}\n \nexport default MainContainer;","/Users/heather/Desktop/Capstone_Project_Reelax/reelax/client/src/helpers/request.js",[],[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":99,"column":11,"nodeType":"35","messageId":"36","endLine":99,"endColumn":22},{"ruleId":"33","severity":1,"message":"38","line":103,"column":11,"nodeType":"35","messageId":"36","endLine":103,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'userDisplay' is assigned a value but never used.","'reviewDisplay' is assigned a value but never used."]